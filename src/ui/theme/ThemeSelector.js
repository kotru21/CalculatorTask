/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç UI –¥–ª—è –≤—ã–±–æ—Ä–∞ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–µ–º–∞–º–∏
 */
export class ThemeSelector {
  constructor(themeManager) {
    this.themeManager = themeManager;
    this.container = null;
    this.isOpen = false;
  }

  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
   */
  init() {
    this.createSelectorButton();
    this.createDropdown();
    this.setupEventListeners();
  }

  /**
   * –°–æ–∑–¥–∞–µ—Ç –∫–Ω–æ–ø–∫—É —Å–µ–ª–µ–∫—Ç–æ—Ä–∞ —Ç–µ–º
   */
  createSelectorButton() {
    const button = document.createElement('button');
    button.className = 'theme-selector-btn';
    button.innerHTML = 'üé®';
    button.title = '–í—ã–±—Ä–∞—Ç—å —Ç–µ–º—É';
    button.setAttribute('aria-label', '–í—ã–±—Ä–∞—Ç—å —Ç–µ–º—É');

    // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤ header –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞
    const calculatorDisplay = document.querySelector('.calculator-display');
    if (calculatorDisplay) {
      calculatorDisplay.appendChild(button);
    }

    this.selectorButton = button;
  }

  /**
   * –°–æ–∑–¥–∞–µ—Ç –≤—ã–ø–∞–¥–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫ —Ç–µ–º
   */
  createDropdown() {
    const dropdown = document.createElement('div');
    dropdown.className = 'theme-dropdown';
    dropdown.innerHTML = `
      <div class="theme-dropdown-header">
        <h3>–í—ã–±–æ—Ä —Ç–µ–º—ã</h3>
        <button class="theme-close-btn" aria-label="–ó–∞–∫—Ä—ã—Ç—å">√ó</button>
      </div>
      <div class="theme-dropdown-content">
        <div class="theme-section">
          <h4>–ü—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Ç–µ–º—ã</h4>
          <div class="theme-list predefined-themes"></div>
        </div>
        <div class="theme-section">
          <h4>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Ç–µ–º—ã</h4>
          <div class="theme-list custom-themes"></div>
          <button class="create-theme-btn">
            <span>+ –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é —Ç–µ–º—É</span>
          </button>
        </div>
      </div>
    `;

    document.body.appendChild(dropdown);
    this.dropdown = dropdown;

    this.populateThemes();
  }

  /**
   * –ó–∞–ø–æ–ª–Ω—è–µ—Ç —Å–ø–∏—Å–∫–∏ —Ç–µ–º
   */
  populateThemes() {
    const predefinedContainer = this.dropdown.querySelector('.predefined-themes');
    const customContainer = this.dropdown.querySelector('.custom-themes');

    // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
    predefinedContainer.innerHTML = '';
    customContainer.innerHTML = '';

    const allThemes = this.themeManager.getAllThemes();
    const currentTheme = this.themeManager.getCurrentTheme();

    allThemes.forEach((theme) => {
      const themeItem = this.createThemeItem(theme, currentTheme);

      if (theme.isCustom) {
        customContainer.appendChild(themeItem);
      } else {
        predefinedContainer.appendChild(themeItem);
      }
    });
  }

  /**
   * –°–æ–∑–¥–∞–µ—Ç —ç–ª–µ–º–µ–Ω—Ç —Ç–µ–º—ã
   * @param {Object} theme - –û–±—ä–µ–∫—Ç —Ç–µ–º—ã
   * @param {Object} currentTheme - –¢–µ–∫—É—â–∞—è —Ç–µ–º–∞
   * @returns {HTMLElement} - –≠–ª–µ–º–µ–Ω—Ç —Ç–µ–º—ã
   */
  createThemeItem(theme, currentTheme) {
    const item = document.createElement('div');
    item.className = 'theme-item';
    if (currentTheme && theme.id === currentTheme.id) {
      item.classList.add('active');
    }

    const preview = this.createThemePreview(theme);

    item.innerHTML = `
      <div class="theme-preview-container">
        ${preview}
      </div>
      <div class="theme-info">
        <span class="theme-name">${theme.name}</span>
        <div class="theme-actions">
          <button class="apply-theme-btn" data-theme-id="${theme.id}" title="–ü—Ä–∏–º–µ–Ω–∏—Ç—å —Ç–µ–º—É">
            ‚úì
          </button>
          ${
            theme.isCustom
              ? `
            <button class="edit-theme-btn" data-theme-id="${theme.id}" title="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å">
              ‚úèÔ∏è
            </button>
            <button class="delete-theme-btn" data-theme-id="${theme.id}" title="–£–¥–∞–ª–∏—Ç—å">
              üóëÔ∏è
            </button>
          `
              : ''
          }
        </div>
      </div>
    `;

    return item;
  }

  /**
   * –°–æ–∑–¥–∞–µ—Ç –ø—Ä–µ–≤—å—é —Ç–µ–º—ã
   * @param {Object} theme - –û–±—ä–µ–∫—Ç —Ç–µ–º—ã
   * @returns {string} - HTML –ø—Ä–µ–≤—å—é
   */
  createThemePreview(theme) {
    const vars = theme.variables;
    return `
      <div class="theme-preview" style="
        background: ${vars['--bg-calculator'] || '#ffffff'};
        border: 2px solid ${vars['--bg-display'] || '#283747'};
      ">
        <div class="preview-display" style="
          background: ${vars['--bg-display'] || '#283747'};
          color: ${vars['--color-display'] || '#ffffff'};
        ">0</div>        <div class="preview-buttons">
          <div class="preview-btn" style="background: ${vars['--bg-button'] || '#f0f0f0'};"></div>
          <div class="preview-btn" style="background: ${
            vars['--bg-button-operation'] || '#f39c12'
          };"></div>
          <div class="preview-btn" style="background: ${
            vars['--bg-button-memory'] || '#3498db'
          };"></div>
        </div>
      </div>
    `;
  }

  /**
   * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
   */
  setupEventListeners() {
    // –û—Ç–∫—Ä—ã—Ç–∏–µ/–∑–∞–∫—Ä—ã—Ç–∏–µ —Å–µ–ª–µ–∫—Ç–æ—Ä–∞
    this.selectorButton.addEventListener('click', (e) => {
      e.stopPropagation();
      this.toggle();
    });

    // –ó–∞–∫—Ä—ã—Ç–∏–µ —Å–µ–ª–µ–∫—Ç–æ—Ä–∞
    this.dropdown.querySelector('.theme-close-btn').addEventListener('click', () => {
      this.close();
    });

    // –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ç–µ–º—ã
    this.dropdown.addEventListener('click', (e) => {
      if (e.target.classList.contains('apply-theme-btn')) {
        const { themeId } = e.target.dataset;
        this.themeManager.applyTheme(themeId);
        this.populateThemes(); // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—É—é —Ç–µ–º—É
      }

      if (e.target.classList.contains('edit-theme-btn')) {
        const { themeId } = e.target.dataset;
        this.openThemeEditor(themeId);
      }

      if (e.target.classList.contains('delete-theme-btn')) {
        const { themeId } = e.target.dataset;
        this.deleteTheme(themeId);
      }

      if (e.target.classList.contains('create-theme-btn')) {
        this.openThemeEditor();
      }
    });

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –æ–±–ª–∞—Å—Ç–∏
    document.addEventListener('click', (e) => {
      if (this.isOpen && !this.dropdown.contains(e.target)) {
        this.close();
      }
    });

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ç–µ–º—ã
    document.addEventListener('themeChanged', () => {
      this.populateThemes();
    });
  }

  /**
   * –û—Ç–∫—Ä—ã–≤–∞–µ—Ç/–∑–∞–∫—Ä—ã–≤–∞–µ—Ç —Å–µ–ª–µ–∫—Ç–æ—Ä
   */
  toggle() {
    if (this.isOpen) {
      this.close();
    } else {
      this.open();
    }
  }

  /**
   * –û—Ç–∫—Ä—ã–≤–∞–µ—Ç —Å–µ–ª–µ–∫—Ç–æ—Ä
   */
  open() {
    this.dropdown.classList.add('open');
    this.isOpen = true;
    this.populateThemes(); // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏
  }

  /**
   * –ó–∞–∫—Ä—ã–≤–∞–µ—Ç —Å–µ–ª–µ–∫—Ç–æ—Ä
   */
  close() {
    this.dropdown.classList.remove('open');
    this.isOpen = false;
  }

  /**
   * –£–¥–∞–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫—É—é —Ç–µ–º—É
   * @param {string} themeId - ID —Ç–µ–º—ã
   */ deleteTheme(themeId) {
    /* eslint-disable no-restricted-globals, no-alert */
    if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç—É —Ç–µ–º—É?')) {
      try {
        this.themeManager.deleteCustomTheme(themeId);
        this.populateThemes();
      } catch (error) {
        alert(`–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ç–µ–º—ã: ${error.message}`);
      }
    }
    /* eslint-enable no-restricted-globals, no-alert */
  }

  /**
   * –û—Ç–∫—Ä—ã–≤–∞–µ—Ç —Ä–µ–¥–∞–∫—Ç–æ—Ä —Ç–µ–º
   * @param {string} themeId - ID —Ç–µ–º—ã (–¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è) –∏–ª–∏ undefined (–¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–π)
   */ openThemeEditor(themeId = null) {
    // –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–µ
    /* eslint-disable-next-line no-console */
    console.log('–û—Ç–∫—Ä—ã–≤–∞–µ–º —Ä–µ–¥–∞–∫—Ç–æ—Ä —Ç–µ–º –¥–ª—è:', themeId || '–Ω–æ–≤–æ–π —Ç–µ–º—ã');

    // –í—Ä–µ–º–µ–Ω–Ω–æ —Å–æ–∑–¥–∞–µ–º —Å–æ–±—ã—Ç–∏–µ –¥–ª—è –ø–æ–∫–∞–∑–∞, —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è
    const event = new CustomEvent('openThemeEditor', {
      detail: { themeId },
    });
    document.dispatchEvent(event);
  }
}
